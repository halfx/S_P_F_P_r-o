//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DllClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlackPhoneInfo", Namespace="http://schemas.datacontract.org/2004/07/X86DllServer")]
    [System.SerializableAttribute()]
    public partial struct BlackPhoneInfo : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint appfreeMemoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint apptotalMemoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int deviceIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imeiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string modelStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pinStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string softVersionField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint appfreeMemory {
            get {
                return this.appfreeMemoryField;
            }
            set {
                if ((this.appfreeMemoryField.Equals(value) != true)) {
                    this.appfreeMemoryField = value;
                    this.RaisePropertyChanged("appfreeMemory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint apptotalMemory {
            get {
                return this.apptotalMemoryField;
            }
            set {
                if ((this.apptotalMemoryField.Equals(value) != true)) {
                    this.apptotalMemoryField = value;
                    this.RaisePropertyChanged("apptotalMemory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int deviceIndex {
            get {
                return this.deviceIndexField;
            }
            set {
                if ((this.deviceIndexField.Equals(value) != true)) {
                    this.deviceIndexField = value;
                    this.RaisePropertyChanged("deviceIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imei {
            get {
                return this.imeiField;
            }
            set {
                if ((object.ReferenceEquals(this.imeiField, value) != true)) {
                    this.imeiField = value;
                    this.RaisePropertyChanged("imei");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string modelStr {
            get {
                return this.modelStrField;
            }
            set {
                if ((object.ReferenceEquals(this.modelStrField, value) != true)) {
                    this.modelStrField = value;
                    this.RaisePropertyChanged("modelStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pinStr {
            get {
                return this.pinStrField;
            }
            set {
                if ((object.ReferenceEquals(this.pinStrField, value) != true)) {
                    this.pinStrField = value;
                    this.RaisePropertyChanged("pinStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string softVersion {
            get {
                return this.softVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.softVersionField, value) != true)) {
                    this.softVersionField = value;
                    this.RaisePropertyChanged("softVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlackPhoneAppContentInfo", Namespace="http://schemas.datacontract.org/2004/07/X86DllServer")]
    [System.SerializableAttribute()]
    public partial struct BlackPhoneAppContentInfo : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string nameField;
        
        private int recordCountField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int recordCount {
            get {
                return this.recordCountField;
            }
            set {
                if ((this.recordCountField.Equals(value) != true)) {
                    this.recordCountField = value;
                    this.RaisePropertyChanged("recordCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICoreService", CallbackContract=typeof(DllClient.ServiceReference1.ICoreServiceCallback))]
    public interface ICoreService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoreService/Login", ReplyAction="http://tempuri.org/ICoreService/LoginResponse")]
        bool Login();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoreService/Login", ReplyAction="http://tempuri.org/ICoreService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoreService/Leave", ReplyAction="http://tempuri.org/ICoreService/LeaveResponse")]
        void Leave();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoreService/Leave", ReplyAction="http://tempuri.org/ICoreService/LeaveResponse")]
        System.Threading.Tasks.Task LeaveAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICoreServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoreService/ImageDataCallBack", ReplyAction="http://tempuri.org/ICoreService/ImageDataCallBackResponse")]
        void ImageDataCallBack(byte[] data, ref int stop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoreService/VivoBackupCallBack", ReplyAction="http://tempuri.org/ICoreService/VivoBackupCallBackResponse")]
        void VivoBackupCallBack(long imagedALLSize, string filename, ref int stop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoreService/BlackBerryImageDataCallBack", ReplyAction="http://tempuri.org/ICoreService/BlackBerryImageDataCallBackResponse")]
        void BlackBerryImageDataCallBack(long imagedALLSize, string filename, ref int stop);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICoreServiceChannel : DllClient.ServiceReference1.ICoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoreServiceClient : System.ServiceModel.DuplexClientBase<DllClient.ServiceReference1.ICoreService>, DllClient.ServiceReference1.ICoreService {
        
        public CoreServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CoreServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CoreServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CoreServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CoreServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool Login() {
            return base.Channel.Login();
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync() {
            return base.Channel.LoginAsync();
        }
        
        public void Leave() {
            base.Channel.Leave();
        }
        
        public System.Threading.Tasks.Task LeaveAsync() {
            return base.Channel.LeaveAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAndroidMirrorAPIService")]
    public interface IAndroidMirrorAPIService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAndroidMirrorAPIService/AndroidMirror_OpenDevice", ReplyAction="http://tempuri.org/IAndroidMirrorAPIService/AndroidMirror_OpenDeviceResponse")]
        int AndroidMirror_OpenDevice(string deviceSerialnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAndroidMirrorAPIService/AndroidMirror_OpenDevice", ReplyAction="http://tempuri.org/IAndroidMirrorAPIService/AndroidMirror_OpenDeviceResponse")]
        System.Threading.Tasks.Task<int> AndroidMirror_OpenDeviceAsync(string deviceSerialnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAndroidMirrorAPIService/AndroidMirror_Initialize", ReplyAction="http://tempuri.org/IAndroidMirrorAPIService/AndroidMirror_InitializeResponse")]
        int AndroidMirror_Initialize(int oIntPtr, int eachReadMaxSize, int htc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAndroidMirrorAPIService/AndroidMirror_Initialize", ReplyAction="http://tempuri.org/IAndroidMirrorAPIService/AndroidMirror_InitializeResponse")]
        System.Threading.Tasks.Task<int> AndroidMirror_InitializeAsync(int oIntPtr, int eachReadMaxSize, int htc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAndroidMirrorAPIService/AndroidMirror_ImageDataZone", ReplyAction="http://tempuri.org/IAndroidMirrorAPIService/AndroidMirror_ImageDataZoneResponse")]
        int AndroidMirror_ImageDataZone(int imgHandle, string pPhysicDataPhonePath, long start, long count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAndroidMirrorAPIService/AndroidMirror_ImageDataZone", ReplyAction="http://tempuri.org/IAndroidMirrorAPIService/AndroidMirror_ImageDataZoneResponse")]
        System.Threading.Tasks.Task<int> AndroidMirror_ImageDataZoneAsync(int imgHandle, string pPhysicDataPhonePath, long start, long count);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAndroidMirrorAPIServiceChannel : DllClient.ServiceReference1.IAndroidMirrorAPIService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AndroidMirrorAPIServiceClient : System.ServiceModel.ClientBase<DllClient.ServiceReference1.IAndroidMirrorAPIService>, DllClient.ServiceReference1.IAndroidMirrorAPIService {
        
        public AndroidMirrorAPIServiceClient() {
        }
        
        public AndroidMirrorAPIServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AndroidMirrorAPIServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AndroidMirrorAPIServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AndroidMirrorAPIServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AndroidMirror_OpenDevice(string deviceSerialnumber) {
            return base.Channel.AndroidMirror_OpenDevice(deviceSerialnumber);
        }
        
        public System.Threading.Tasks.Task<int> AndroidMirror_OpenDeviceAsync(string deviceSerialnumber) {
            return base.Channel.AndroidMirror_OpenDeviceAsync(deviceSerialnumber);
        }
        
        public int AndroidMirror_Initialize(int oIntPtr, int eachReadMaxSize, int htc) {
            return base.Channel.AndroidMirror_Initialize(oIntPtr, eachReadMaxSize, htc);
        }
        
        public System.Threading.Tasks.Task<int> AndroidMirror_InitializeAsync(int oIntPtr, int eachReadMaxSize, int htc) {
            return base.Channel.AndroidMirror_InitializeAsync(oIntPtr, eachReadMaxSize, htc);
        }
        
        public int AndroidMirror_ImageDataZone(int imgHandle, string pPhysicDataPhonePath, long start, long count) {
            return base.Channel.AndroidMirror_ImageDataZone(imgHandle, pPhysicDataPhonePath, start, count);
        }
        
        public System.Threading.Tasks.Task<int> AndroidMirror_ImageDataZoneAsync(int imgHandle, string pPhysicDataPhonePath, long start, long count) {
            return base.Channel.AndroidMirror_ImageDataZoneAsync(imgHandle, pPhysicDataPhonePath, start, count);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IVivoBackupAPIService")]
    public interface IVivoBackupAPIService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVivoBackupAPIService/VivoBackup_OpenDevice", ReplyAction="http://tempuri.org/IVivoBackupAPIService/VivoBackup_OpenDeviceResponse")]
        int VivoBackup_OpenDevice(string deviceSerialnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVivoBackupAPIService/VivoBackup_OpenDevice", ReplyAction="http://tempuri.org/IVivoBackupAPIService/VivoBackup_OpenDeviceResponse")]
        System.Threading.Tasks.Task<int> VivoBackup_OpenDeviceAsync(string deviceSerialnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVivoBackupAPIService/VivoBackup_Initialize", ReplyAction="http://tempuri.org/IVivoBackupAPIService/VivoBackup_InitializeResponse")]
        int VivoBackup_Initialize(int imgHandle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVivoBackupAPIService/VivoBackup_Initialize", ReplyAction="http://tempuri.org/IVivoBackupAPIService/VivoBackup_InitializeResponse")]
        System.Threading.Tasks.Task<int> VivoBackup_InitializeAsync(int imgHandle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVivoBackupAPIService/VivoBackup_GetAppIDList", ReplyAction="http://tempuri.org/IVivoBackupAPIService/VivoBackup_GetAppIDListResponse")]
        DllClient.ServiceReference1.VivoBackup_GetAppIDListResponse VivoBackup_GetAppIDList(DllClient.ServiceReference1.VivoBackup_GetAppIDListRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVivoBackupAPIService/VivoBackup_GetAppIDList", ReplyAction="http://tempuri.org/IVivoBackupAPIService/VivoBackup_GetAppIDListResponse")]
        System.Threading.Tasks.Task<DllClient.ServiceReference1.VivoBackup_GetAppIDListResponse> VivoBackup_GetAppIDListAsync(DllClient.ServiceReference1.VivoBackup_GetAppIDListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVivoBackupAPIService/VivoBackup_BackupFiles", ReplyAction="http://tempuri.org/IVivoBackupAPIService/VivoBackup_BackupFilesResponse")]
        int VivoBackup_BackupFiles(int imgHandle, string psavePath, string[] pbackupappid, int nums);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVivoBackupAPIService/VivoBackup_BackupFiles", ReplyAction="http://tempuri.org/IVivoBackupAPIService/VivoBackup_BackupFilesResponse")]
        System.Threading.Tasks.Task<int> VivoBackup_BackupFilesAsync(int imgHandle, string psavePath, string[] pbackupappid, int nums);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVivoBackupAPIService/VivoBackup_Close", ReplyAction="http://tempuri.org/IVivoBackupAPIService/VivoBackup_CloseResponse")]
        DllClient.ServiceReference1.VivoBackup_CloseResponse VivoBackup_Close(DllClient.ServiceReference1.VivoBackup_CloseRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVivoBackupAPIService/VivoBackup_Close", ReplyAction="http://tempuri.org/IVivoBackupAPIService/VivoBackup_CloseResponse")]
        System.Threading.Tasks.Task<DllClient.ServiceReference1.VivoBackup_CloseResponse> VivoBackup_CloseAsync(DllClient.ServiceReference1.VivoBackup_CloseRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VivoBackup_GetAppIDList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class VivoBackup_GetAppIDListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int imgHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] listAppId;
        
        public VivoBackup_GetAppIDListRequest() {
        }
        
        public VivoBackup_GetAppIDListRequest(int imgHandle, string[] listAppId) {
            this.imgHandle = imgHandle;
            this.listAppId = listAppId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VivoBackup_GetAppIDListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class VivoBackup_GetAppIDListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int VivoBackup_GetAppIDListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] listAppId;
        
        public VivoBackup_GetAppIDListResponse() {
        }
        
        public VivoBackup_GetAppIDListResponse(int VivoBackup_GetAppIDListResult, string[] listAppId) {
            this.VivoBackup_GetAppIDListResult = VivoBackup_GetAppIDListResult;
            this.listAppId = listAppId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VivoBackup_Close", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class VivoBackup_CloseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int imgHandle;
        
        public VivoBackup_CloseRequest() {
        }
        
        public VivoBackup_CloseRequest(int imgHandle) {
            this.imgHandle = imgHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VivoBackup_CloseResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class VivoBackup_CloseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int VivoBackup_CloseResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int imgHandle;
        
        public VivoBackup_CloseResponse() {
        }
        
        public VivoBackup_CloseResponse(int VivoBackup_CloseResult, int imgHandle) {
            this.VivoBackup_CloseResult = VivoBackup_CloseResult;
            this.imgHandle = imgHandle;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVivoBackupAPIServiceChannel : DllClient.ServiceReference1.IVivoBackupAPIService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VivoBackupAPIServiceClient : System.ServiceModel.ClientBase<DllClient.ServiceReference1.IVivoBackupAPIService>, DllClient.ServiceReference1.IVivoBackupAPIService {
        
        public VivoBackupAPIServiceClient() {
        }
        
        public VivoBackupAPIServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VivoBackupAPIServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VivoBackupAPIServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VivoBackupAPIServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int VivoBackup_OpenDevice(string deviceSerialnumber) {
            return base.Channel.VivoBackup_OpenDevice(deviceSerialnumber);
        }
        
        public System.Threading.Tasks.Task<int> VivoBackup_OpenDeviceAsync(string deviceSerialnumber) {
            return base.Channel.VivoBackup_OpenDeviceAsync(deviceSerialnumber);
        }
        
        public int VivoBackup_Initialize(int imgHandle) {
            return base.Channel.VivoBackup_Initialize(imgHandle);
        }
        
        public System.Threading.Tasks.Task<int> VivoBackup_InitializeAsync(int imgHandle) {
            return base.Channel.VivoBackup_InitializeAsync(imgHandle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DllClient.ServiceReference1.VivoBackup_GetAppIDListResponse DllClient.ServiceReference1.IVivoBackupAPIService.VivoBackup_GetAppIDList(DllClient.ServiceReference1.VivoBackup_GetAppIDListRequest request) {
            return base.Channel.VivoBackup_GetAppIDList(request);
        }
        
        public int VivoBackup_GetAppIDList(int imgHandle, ref string[] listAppId) {
            DllClient.ServiceReference1.VivoBackup_GetAppIDListRequest inValue = new DllClient.ServiceReference1.VivoBackup_GetAppIDListRequest();
            inValue.imgHandle = imgHandle;
            inValue.listAppId = listAppId;
            DllClient.ServiceReference1.VivoBackup_GetAppIDListResponse retVal = ((DllClient.ServiceReference1.IVivoBackupAPIService)(this)).VivoBackup_GetAppIDList(inValue);
            listAppId = retVal.listAppId;
            return retVal.VivoBackup_GetAppIDListResult;
        }
        
        public System.Threading.Tasks.Task<DllClient.ServiceReference1.VivoBackup_GetAppIDListResponse> VivoBackup_GetAppIDListAsync(DllClient.ServiceReference1.VivoBackup_GetAppIDListRequest request) {
            return base.Channel.VivoBackup_GetAppIDListAsync(request);
        }
        
        public int VivoBackup_BackupFiles(int imgHandle, string psavePath, string[] pbackupappid, int nums) {
            return base.Channel.VivoBackup_BackupFiles(imgHandle, psavePath, pbackupappid, nums);
        }
        
        public System.Threading.Tasks.Task<int> VivoBackup_BackupFilesAsync(int imgHandle, string psavePath, string[] pbackupappid, int nums) {
            return base.Channel.VivoBackup_BackupFilesAsync(imgHandle, psavePath, pbackupappid, nums);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DllClient.ServiceReference1.VivoBackup_CloseResponse DllClient.ServiceReference1.IVivoBackupAPIService.VivoBackup_Close(DllClient.ServiceReference1.VivoBackup_CloseRequest request) {
            return base.Channel.VivoBackup_Close(request);
        }
        
        public int VivoBackup_Close(ref int imgHandle) {
            DllClient.ServiceReference1.VivoBackup_CloseRequest inValue = new DllClient.ServiceReference1.VivoBackup_CloseRequest();
            inValue.imgHandle = imgHandle;
            DllClient.ServiceReference1.VivoBackup_CloseResponse retVal = ((DllClient.ServiceReference1.IVivoBackupAPIService)(this)).VivoBackup_Close(inValue);
            imgHandle = retVal.imgHandle;
            return retVal.VivoBackup_CloseResult;
        }
        
        public System.Threading.Tasks.Task<DllClient.ServiceReference1.VivoBackup_CloseResponse> VivoBackup_CloseAsync(DllClient.ServiceReference1.VivoBackup_CloseRequest request) {
            return base.Channel.VivoBackup_CloseAsync(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IBlackBerryDeviceAPIService")]
    public interface IBlackBerryDeviceAPIService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_FindDevices", ReplyAction="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_FindDevicesResponse")]
        DllClient.ServiceReference1.BlackPhoneInfo[] BlackBerry_FindDevices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_FindDevices", ReplyAction="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_FindDevicesResponse")]
        System.Threading.Tasks.Task<DllClient.ServiceReference1.BlackPhoneInfo[]> BlackBerry_FindDevicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_Mount", ReplyAction="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_MountResponse")]
        int BlackBerry_Mount(string pinStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_Mount", ReplyAction="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_MountResponse")]
        System.Threading.Tasks.Task<int> BlackBerry_MountAsync(string pinStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_Close", ReplyAction="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_CloseResponse")]
        void BlackBerry_Close(int blackberryHandle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_Close", ReplyAction="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_CloseResponse")]
        System.Threading.Tasks.Task BlackBerry_CloseAsync(int blackberryHandle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_GetAppDataInfo", ReplyAction="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_GetAppDataInfoResponse")]
        DllClient.ServiceReference1.BlackPhoneAppContentInfo[] BlackBerry_GetAppDataInfo(int blackberryHadnle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_GetAppDataInfo", ReplyAction="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_GetAppDataInfoResponse")]
        System.Threading.Tasks.Task<DllClient.ServiceReference1.BlackPhoneAppContentInfo[]> BlackBerry_GetAppDataInfoAsync(int blackberryHadnle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_ImageAppData", ReplyAction="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_ImageAppDataResponse")]
        int BlackBerry_ImageAppData(int blackberryHadnle, string psavedir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_ImageAppData", ReplyAction="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_ImageAppDataResponse")]
        System.Threading.Tasks.Task<int> BlackBerry_ImageAppDataAsync(int blackberryHadnle, string psavedir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_ReleaseBuffer", ReplyAction="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_ReleaseBufferResponse")]
        void BlackBerry_ReleaseBuffer(int dataHandle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_ReleaseBuffer", ReplyAction="http://tempuri.org/IBlackBerryDeviceAPIService/BlackBerry_ReleaseBufferResponse")]
        System.Threading.Tasks.Task BlackBerry_ReleaseBufferAsync(int dataHandle);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBlackBerryDeviceAPIServiceChannel : DllClient.ServiceReference1.IBlackBerryDeviceAPIService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlackBerryDeviceAPIServiceClient : System.ServiceModel.ClientBase<DllClient.ServiceReference1.IBlackBerryDeviceAPIService>, DllClient.ServiceReference1.IBlackBerryDeviceAPIService {
        
        public BlackBerryDeviceAPIServiceClient() {
        }
        
        public BlackBerryDeviceAPIServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BlackBerryDeviceAPIServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlackBerryDeviceAPIServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlackBerryDeviceAPIServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DllClient.ServiceReference1.BlackPhoneInfo[] BlackBerry_FindDevices() {
            return base.Channel.BlackBerry_FindDevices();
        }
        
        public System.Threading.Tasks.Task<DllClient.ServiceReference1.BlackPhoneInfo[]> BlackBerry_FindDevicesAsync() {
            return base.Channel.BlackBerry_FindDevicesAsync();
        }
        
        public int BlackBerry_Mount(string pinStr) {
            return base.Channel.BlackBerry_Mount(pinStr);
        }
        
        public System.Threading.Tasks.Task<int> BlackBerry_MountAsync(string pinStr) {
            return base.Channel.BlackBerry_MountAsync(pinStr);
        }
        
        public void BlackBerry_Close(int blackberryHandle) {
            base.Channel.BlackBerry_Close(blackberryHandle);
        }
        
        public System.Threading.Tasks.Task BlackBerry_CloseAsync(int blackberryHandle) {
            return base.Channel.BlackBerry_CloseAsync(blackberryHandle);
        }
        
        public DllClient.ServiceReference1.BlackPhoneAppContentInfo[] BlackBerry_GetAppDataInfo(int blackberryHadnle) {
            return base.Channel.BlackBerry_GetAppDataInfo(blackberryHadnle);
        }
        
        public System.Threading.Tasks.Task<DllClient.ServiceReference1.BlackPhoneAppContentInfo[]> BlackBerry_GetAppDataInfoAsync(int blackberryHadnle) {
            return base.Channel.BlackBerry_GetAppDataInfoAsync(blackberryHadnle);
        }
        
        public int BlackBerry_ImageAppData(int blackberryHadnle, string psavedir) {
            return base.Channel.BlackBerry_ImageAppData(blackberryHadnle, psavedir);
        }
        
        public System.Threading.Tasks.Task<int> BlackBerry_ImageAppDataAsync(int blackberryHadnle, string psavedir) {
            return base.Channel.BlackBerry_ImageAppDataAsync(blackberryHadnle, psavedir);
        }
        
        public void BlackBerry_ReleaseBuffer(int dataHandle) {
            base.Channel.BlackBerry_ReleaseBuffer(dataHandle);
        }
        
        public System.Threading.Tasks.Task BlackBerry_ReleaseBufferAsync(int dataHandle) {
            return base.Channel.BlackBerry_ReleaseBufferAsync(dataHandle);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISIMcoreAPIService")]
    public interface ISIMcoreAPIService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISIMcoreAPIService/SimCard_scanCom", ReplyAction="http://tempuri.org/ISIMcoreAPIService/SimCard_scanComResponse")]
        DllClient.ServiceReference1.SimCard_scanComResponse SimCard_scanCom(DllClient.ServiceReference1.SimCard_scanComRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISIMcoreAPIService/SimCard_scanCom", ReplyAction="http://tempuri.org/ISIMcoreAPIService/SimCard_scanComResponse")]
        System.Threading.Tasks.Task<DllClient.ServiceReference1.SimCard_scanComResponse> SimCard_scanComAsync(DllClient.ServiceReference1.SimCard_scanComRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISIMcoreAPIService/SimCard_readSimPhoneNoAndIMSI", ReplyAction="http://tempuri.org/ISIMcoreAPIService/SimCard_readSimPhoneNoAndIMSIResponse")]
        DllClient.ServiceReference1.SimCard_readSimPhoneNoAndIMSIResponse SimCard_readSimPhoneNoAndIMSI(DllClient.ServiceReference1.SimCard_readSimPhoneNoAndIMSIRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISIMcoreAPIService/SimCard_readSimPhoneNoAndIMSI", ReplyAction="http://tempuri.org/ISIMcoreAPIService/SimCard_readSimPhoneNoAndIMSIResponse")]
        System.Threading.Tasks.Task<DllClient.ServiceReference1.SimCard_readSimPhoneNoAndIMSIResponse> SimCard_readSimPhoneNoAndIMSIAsync(DllClient.ServiceReference1.SimCard_readSimPhoneNoAndIMSIRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISIMcoreAPIService/SimCard_readAddressbook", ReplyAction="http://tempuri.org/ISIMcoreAPIService/SimCard_readAddressbookResponse")]
        string SimCard_readAddressbook(string comstr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISIMcoreAPIService/SimCard_readAddressbook", ReplyAction="http://tempuri.org/ISIMcoreAPIService/SimCard_readAddressbookResponse")]
        System.Threading.Tasks.Task<string> SimCard_readAddressbookAsync(string comstr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISIMcoreAPIService/SimCard_readlastCalled", ReplyAction="http://tempuri.org/ISIMcoreAPIService/SimCard_readlastCalledResponse")]
        string SimCard_readlastCalled(string comstr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISIMcoreAPIService/SimCard_readlastCalled", ReplyAction="http://tempuri.org/ISIMcoreAPIService/SimCard_readlastCalledResponse")]
        System.Threading.Tasks.Task<string> SimCard_readlastCalledAsync(string comstr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISIMcoreAPIService/SimCard_readSMS", ReplyAction="http://tempuri.org/ISIMcoreAPIService/SimCard_readSMSResponse")]
        string SimCard_readSMS(string comstr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISIMcoreAPIService/SimCard_readSMS", ReplyAction="http://tempuri.org/ISIMcoreAPIService/SimCard_readSMSResponse")]
        System.Threading.Tasks.Task<string> SimCard_readSMSAsync(string comstr);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SimCard_scanCom", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SimCard_scanComRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] listComs;
        
        public SimCard_scanComRequest() {
        }
        
        public SimCard_scanComRequest(string[] listComs) {
            this.listComs = listComs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SimCard_scanComResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SimCard_scanComResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int SimCard_scanComResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] listComs;
        
        public SimCard_scanComResponse() {
        }
        
        public SimCard_scanComResponse(int SimCard_scanComResult, string[] listComs) {
            this.SimCard_scanComResult = SimCard_scanComResult;
            this.listComs = listComs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SimCard_readSimPhoneNoAndIMSI", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SimCard_readSimPhoneNoAndIMSIRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string comstr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] listPhoneNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string imsi;
        
        public SimCard_readSimPhoneNoAndIMSIRequest() {
        }
        
        public SimCard_readSimPhoneNoAndIMSIRequest(string comstr, string[] listPhoneNo, string imsi) {
            this.comstr = comstr;
            this.listPhoneNo = listPhoneNo;
            this.imsi = imsi;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SimCard_readSimPhoneNoAndIMSIResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SimCard_readSimPhoneNoAndIMSIResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int SimCard_readSimPhoneNoAndIMSIResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] listPhoneNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string imsi;
        
        public SimCard_readSimPhoneNoAndIMSIResponse() {
        }
        
        public SimCard_readSimPhoneNoAndIMSIResponse(int SimCard_readSimPhoneNoAndIMSIResult, string[] listPhoneNo, string imsi) {
            this.SimCard_readSimPhoneNoAndIMSIResult = SimCard_readSimPhoneNoAndIMSIResult;
            this.listPhoneNo = listPhoneNo;
            this.imsi = imsi;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISIMcoreAPIServiceChannel : DllClient.ServiceReference1.ISIMcoreAPIService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SIMcoreAPIServiceClient : System.ServiceModel.ClientBase<DllClient.ServiceReference1.ISIMcoreAPIService>, DllClient.ServiceReference1.ISIMcoreAPIService {
        
        public SIMcoreAPIServiceClient() {
        }
        
        public SIMcoreAPIServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SIMcoreAPIServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SIMcoreAPIServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SIMcoreAPIServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DllClient.ServiceReference1.SimCard_scanComResponse DllClient.ServiceReference1.ISIMcoreAPIService.SimCard_scanCom(DllClient.ServiceReference1.SimCard_scanComRequest request) {
            return base.Channel.SimCard_scanCom(request);
        }
        
        public int SimCard_scanCom(ref string[] listComs) {
            DllClient.ServiceReference1.SimCard_scanComRequest inValue = new DllClient.ServiceReference1.SimCard_scanComRequest();
            inValue.listComs = listComs;
            DllClient.ServiceReference1.SimCard_scanComResponse retVal = ((DllClient.ServiceReference1.ISIMcoreAPIService)(this)).SimCard_scanCom(inValue);
            listComs = retVal.listComs;
            return retVal.SimCard_scanComResult;
        }
        
        public System.Threading.Tasks.Task<DllClient.ServiceReference1.SimCard_scanComResponse> SimCard_scanComAsync(DllClient.ServiceReference1.SimCard_scanComRequest request) {
            return base.Channel.SimCard_scanComAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DllClient.ServiceReference1.SimCard_readSimPhoneNoAndIMSIResponse DllClient.ServiceReference1.ISIMcoreAPIService.SimCard_readSimPhoneNoAndIMSI(DllClient.ServiceReference1.SimCard_readSimPhoneNoAndIMSIRequest request) {
            return base.Channel.SimCard_readSimPhoneNoAndIMSI(request);
        }
        
        public int SimCard_readSimPhoneNoAndIMSI(string comstr, ref string[] listPhoneNo, ref string imsi) {
            DllClient.ServiceReference1.SimCard_readSimPhoneNoAndIMSIRequest inValue = new DllClient.ServiceReference1.SimCard_readSimPhoneNoAndIMSIRequest();
            inValue.comstr = comstr;
            inValue.listPhoneNo = listPhoneNo;
            inValue.imsi = imsi;
            DllClient.ServiceReference1.SimCard_readSimPhoneNoAndIMSIResponse retVal = ((DllClient.ServiceReference1.ISIMcoreAPIService)(this)).SimCard_readSimPhoneNoAndIMSI(inValue);
            listPhoneNo = retVal.listPhoneNo;
            imsi = retVal.imsi;
            return retVal.SimCard_readSimPhoneNoAndIMSIResult;
        }
        
        public System.Threading.Tasks.Task<DllClient.ServiceReference1.SimCard_readSimPhoneNoAndIMSIResponse> SimCard_readSimPhoneNoAndIMSIAsync(DllClient.ServiceReference1.SimCard_readSimPhoneNoAndIMSIRequest request) {
            return base.Channel.SimCard_readSimPhoneNoAndIMSIAsync(request);
        }
        
        public string SimCard_readAddressbook(string comstr) {
            return base.Channel.SimCard_readAddressbook(comstr);
        }
        
        public System.Threading.Tasks.Task<string> SimCard_readAddressbookAsync(string comstr) {
            return base.Channel.SimCard_readAddressbookAsync(comstr);
        }
        
        public string SimCard_readlastCalled(string comstr) {
            return base.Channel.SimCard_readlastCalled(comstr);
        }
        
        public System.Threading.Tasks.Task<string> SimCard_readlastCalledAsync(string comstr) {
            return base.Channel.SimCard_readlastCalledAsync(comstr);
        }
        
        public string SimCard_readSMS(string comstr) {
            return base.Channel.SimCard_readSMS(comstr);
        }
        
        public System.Threading.Tasks.Task<string> SimCard_readSMSAsync(string comstr) {
            return base.Channel.SimCard_readSMSAsync(comstr);
        }
    }
}
